name: CI

on:
  push:
    branches: [ main, 'feature/**' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Lint & Test (${{ matrix.os }} - Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.12]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements_dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install package (editable) and dev requirements
        run: |
          # Install the package (path contains a space) in editable mode
          python -m pip install -e "./Python - Voice Recorder"
          # Install dev/test requirements used by CI
          python -m pip install -r requirements_dev.txt

      - name: Run mypy (type checks)
        run: python -m mypy "Python - Voice Recorder/src" --ignore-missing-imports || true

      - name: Check for legacy imports
        run: python tools/check_imports.py "Python - Voice Recorder"

      - name: Run ruff (linting)
        run: python -m ruff check "Python - Voice Recorder/src" "Python - Voice Recorder/tests" "Python - Voice Recorder/cloud"

      - name: Run black (formatting check)
        run: python -m black --check "Python - Voice Recorder/src" "Python - Voice Recorder/tests" "Python - Voice Recorder/cloud"

      - name: Run isort (import sorting check)
        run: python -m isort --check-only "Python - Voice Recorder/src" "Python - Voice Recorder/tests" "Python - Voice Recorder/cloud"

      - name: Run tests (unit tests only)
        run: |
          cd "Python - Voice Recorder"
          python -m pytest -m "not integration" --tb=short --junitxml=../junit-report.xml --cov=src --cov=cloud --cov-report=xml:../coverage.xml --cov-report=term-missing
        env:
          PYTHONPATH: ${{ github.workspace }}/Python-Voice-Recorder:${{ github.workspace }}/Python - Voice Recorder

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-py${{ matrix.python-version }}
          path: junit-report.xml

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-py${{ matrix.python-version }}
          path: coverage.xml
