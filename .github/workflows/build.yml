name: Build

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-wheel:
    name: Build Python wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel setuptools
      
      - name: Build wheel and sdist
        run: python -m build
        working-directory: 'Python - Voice Recorder'
      
      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-wheel
          path: Python - Voice Recorder/dist/*.whl
          retention-days: 30
      
      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-sdist
          path: Python - Voice Recorder/dist/*.tar.gz
          retention-days: 30

  build-windows-exe:
    name: Build Windows executable
    runs-on: windows-latest
    continue-on-error: true  # Windows build is optional (PortAudio dependency issues)
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install PyAudio from pre-built wheel
        continue-on-error: true
        run: |
          # Try to install PyAudio from pre-built wheel (pipwin or direct)
          pip install pipwin || pip install PyAudio || echo "PyAudio installation skipped"
      
      - name: Install package and dependencies
        working-directory: 'Python - Voice Recorder'
        run: |
          # Install without audio dependencies if they fail
          pip install -e . || pip install --no-deps -e .
          pip install pyinstaller
      
      - name: Build executable with PyInstaller
        working-directory: 'Python - Voice Recorder'
        run: |
          if (Test-Path VoiceRecorderPro.spec) {
            pyinstaller VoiceRecorderPro.spec
          } else {
            Write-Host "No VoiceRecorderPro.spec found, creating basic executable"
            pyinstaller --name VoiceRecorderPro --onefile --windowed src/entrypoint.py
          }
      
      - name: Upload Windows executable
        uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: Python - Voice Recorder/dist/VoiceRecorderPro.exe
          retention-days: 30
          if-no-files-found: warn

  build-summary:
    name: Build summary
    runs-on: ubuntu-latest
    needs: [build-wheel, build-windows-exe]
    if: always()
    steps:
      - name: Check build status
        run: |
          echo "Build wheel status: ${{ needs.build-wheel.result }}"
          echo "Build Windows exe status: ${{ needs.build-windows-exe.result }}"
          
          if [ "${{ needs.build-wheel.result }}" != "success" ]; then
            echo "::error::Wheel build failed"
            exit 1
          fi
          
          if [ "${{ needs.build-windows-exe.result }}" != "success" ]; then
            echo "::warning::Windows executable build failed or skipped"
          fi
