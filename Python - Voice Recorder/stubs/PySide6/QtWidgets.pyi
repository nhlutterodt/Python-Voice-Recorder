from typing import Any, Optional


class QLayout:
    def addWidget(self, w: Any) -> None: ...
    def removeWidget(self, w: Any) -> None: ...
    def addLayout(self, l: Any) -> None: ...
    def addStretch(self) -> None: ...


class QWidget:
    def parentWidget(self) -> Optional['QWidget']: ...
    def layout(self) -> Optional[QLayout]: ...
    def deleteLater(self) -> None: ...


class QTabWidget(QWidget):
    def count(self) -> int: ...
    def widget(self, index: int) -> QWidget: ...
    def removeTab(self, index: int) -> None: ...
    def addTab(self, widget: QWidget, label: str) -> None: ...


class QVBoxLayout(QLayout):
    pass


class QHBoxLayout(QLayout):
    pass


class QLabel(QWidget):
    def __init__(self, text: str = '') -> None: ...
    def setStyleSheet(self, style: str) -> None: ...


class _SignalLike:
    def connect(self, slot: Any) -> None: ...


class QPushButton(QWidget):
    clicked: _SignalLike
    def __init__(self, text: str = '') -> None: ...
    def setFixedSize(self, w: int, h: int) -> None: ...
