id,phase,priority,task,description,owner,status,estimate_days,dependencies,success_criteria,commands,files_to_add,notes,created_date,due_date,completion_date,progress_notes,local_verified,ci_verified
1,short,medium,tooling: add pyproject tool configs,Add `[tool.ruff]`, `[tool.black]`, `[tool.isort]` sections to `pyproject.toml` and standardize formatting options,You,done,0.5,,Tools use same configuration locally and in CI,pyproject.toml,"Align formatting rules with repo style",2025-10-13,2025-10-18,2025-10-13,"Added tool configs to pyproject.toml; local ruff/black/isort config verified with local ruff run",true,false
2,short,medium,packaging: complete pyproject metadata,Populate `pyproject.toml` with name, version, authors, license, classifiers and build-system info,You,done,1,1,python -m build succeeds producing a wheel and sdist,pyproject.toml,"Add [project] metadata and [build-system] backend = 'setuptools.build_meta'",2025-10-13,2025-10-20,2025-10-13,"Added project metadata to pyproject.toml; local metadata added and basic validation done via python -m build (not run in CI)",true,false
3,short,medium,pre-commit: add config and hooks,Create `.pre-commit-config.yaml` with ruff, black, isort, end-of-file-fixer and check for large files,You,done,0.5,1,Pre-commit config added and passes locally,.pre-commit-config.yaml,"Add ruff, black, isort, end-of-file-fixer, trailing-whitespace hooks",2025-10-13,2025-10-16,2025-10-13,".pre-commit-config.yaml added; local pre-commit config documented in CONTRIBUTING.md",true,false
4,short,medium,pre-commit: document install & usage,Add a short doc section in CONTRIBUTING.md describing how to install and run pre-commit locally,You,done,0.25,3,Developers can run pre-commit install and it succeeds,CONTRIBUTING.md,"Include 'pre-commit install' and CI enforcement notes",2025-10-13,2025-10-16,2025-10-13,"CONTRIBUTING.md updated with pre-commit install and usage; local hooks verification documented",true,false
5,short,high,tests: add tests/test_db_init.py,Add a pytest that uses tmp_path, sets DATABASE_URL to temp sqlite and runs scripts/init_db.py,You,done,0.5,1,Test asserts expected tables exist after init_db,pytest -q tests/test_db_init.py,tests/test_db_init.py,"Uses monkeypatch/env var injection",2025-10-13,2025-10-16,2025-10-13,"tests/test_db_init.py added and executed locally (passed after installing test deps)",true,false
6,short,high,CI: create workflow skeleton,Add initial GitHub Actions workflow file with job skeletons and matrix placeholders,You,done,0.5,1,Workflow file created and visible in PR,.github/workflows/ci.yml,"Create jobs: lint, typecheck, test; matrix placeholders for windows/linux",2025-10-13,2025-10-14,2025-10-13,"Initial CI workflow added and validated locally (syntax fixed); ready to run via PR",true,false
7,short,high,CI: add runner matrix and caching,Configure matrix for Windows/Linux (optionally macOS) and add pip/cache actions for speed,You,done,0.5,6,Cached dependencies and matrix runs succeed,See workflow file,.github/workflows/ci.yml,"Start with windows-latest and ubuntu-latest; add cache actions",2025-10-13,2025-10-15,2025-10-13,"Added actions/cache for pip and retained runner matrix; local workflow updated",true,false
8,short,high,CI: install editable and dev deps,Install editable package and dev extras in CI using pip and ensure reproducible install,You,done,0.5,2,Editable install succeeds in all runners,"python -m pip install -e .[dev]",.github/workflows/ci.yml,"Added requirements_dev.txt and [project.optional-dependencies].test in pyproject.toml; CI installs -r requirements_dev.txt",2025-10-13,2025-10-15,2025-10-13,"CI step updated to install dev requirements via requirements_dev.txt; pyproject.toml also exposes [project.optional-dependencies].test",true,false
9,short,high,CI: add linting step (ruff/black/isort),Run code style and lint checks and fail CI on violations,You,done,0.5,8,Linter step passes or reports fixed files,See workflow file,.github/workflows/ci.yml,"python -m ruff check .; python -m black --check .; python -m isort --check-only .",2025-10-13,2025-10-16,2025-10-14,"Fixed 16 linting errors (job_dialog.py indentation, unused imports, formatting); formatted 81 files with black; sorted imports in 92 files with isort; all linting checks pass locally",true,false
10,short,high,CI: add mypy run,Run static typing checks in CI and report errors,You,done,0.5,8,Mypy passes on configured modules,See workflow file,.github/workflows/ci.yml,"python -m mypy src --ignore-missing-imports",2025-10-13,2025-10-16,2025-10-13,"Added mypy to requirements_dev.txt and mypy step to CI; run locally as part of dev cycle",true,false
11,short,high,CI: add pytest step and artifacts,Run pytest with JUnit and coverage reporting; upload junit/coverage as artifacts,You,done,1,8,Tests run and produce junit/coverage artifacts,See workflow file,.github/workflows/ci.yml,"python -m pytest -q --junitxml=report.xml --cov=src",2025-10-13,2025-10-17,2025-10-14,"Resolved 13 pytest errors (moved standalone test file, added recordings_dir fixture); fixed 3 test failures (keyring, 2 uploader tests); marked 40 integration tests with @pytest.mark.integration; 307 passing, 0 failures; added junit/coverage reporting to CI workflow",true,false
12,short,high,CI: add lint/type/test artifact upload and badges,Upload junit/coverage and produce status badges in README,You,done,0.5,11,Artifacts attached and badges available,See workflow file,,"Add README badge snippets for build/test/coverage",2025-10-13,2025-10-20,2025-10-14,"Added artifact upload steps to CI workflow for junit-report.xml and coverage.xml; added status badges to README.md (CI, black, isort, ruff)",true,false
13,short,medium,build: create build workflow,Add `.github/workflows/build.yml` to produce wheel artifacts and optionally run PyInstaller on Windows,You,not started,1.5,2,Artifacts produced and attached to workflow run,.github/workflows/build.yml,"Use 'python -m build' and a Windows job for PyInstaller",2025-10-13,2025-10-25
14,short,low,changelog: add CHANGELOG and RELEASE_CHECKLIST,Create `CHANGELOG.md` with 'Unreleased' section and `RELEASE_CHECKLIST.md` detailing steps to cut a release,You,not started,0.5,13,Files added and referenced in PR template,CHANGELOG.md; RELEASE_CHECKLIST.md,"Include version bump, CI green, build, upload, smoke test",2025-10-13,2025-10-18
15,medium,high,imports: add tools/check_imports.py,Create a small script that scans repo for 'import models.' or other legacy imports and exits non-zero if found,You,done,0.5,5,Script detects legacy imports and CI job can run it,tools/check_imports.py,"Use regex and paths to ignore venv/dist",2025-10-13,2025-10-22,2025-10-13,"Script added at tools/check_imports.py and executed against 'Python - Voice Recorder/src' using venv Python; no legacy imports found (exit code 0).",true,false
16,medium,high,Enforce canonical imports in CI,Add a CI check (or pre-commit hook) to fail on legacy 'import models.' usages and require 'voice_recorder.' imports,You,done,1,15,No legacy imports in repo on main; CI fails if found,tools/check_imports.py,.github/workflows/ci.yml,"Prefer to auto-fix imports progressively; initially fail to alert PR authors.",2025-10-13,2025-10-27,2025-10-14,"Added check_imports.py step to CI workflow checking full 'Python - Voice Recorder' directory; script verified locally with 0 legacy imports found; CI will fail if legacy imports detected",true,false
17,medium,medium,security: add pip-audit job to CI,Run pip-audit during CI and annotate results (optional fail-on-severity setting),Security,not started,0.5,8,pip-audit runs and reports findings,Add pip-audit to CI steps,.github/workflows/ci.yml,"Start non-blocking; later require no critical vulns",2025-10-13,2025-11-01
18,medium,medium,release: add release workflow,Create `.github/workflows/release.yml` that can create GitHub Releases and upload artifacts (manual or tag-triggered),You,not started,1.5,13,Release workflow creates a draft release with artifacts,.github/workflows/release.yml,"Use actions/create-release and actions/upload-release-asset",2025-10-13,2025-11-05
19,medium,medium,Create release automation,Automate changelog generation, tag creation, artifact upload, and GitHub Release creation,You/CI,not started,3,18,Releases can be created automatically via workflow,.github/workflows/release.yml,Use semantic-release or a manual action runner,2025-10-13,2025-11-05
20,medium,medium,Add telemetry/observability hooks,Add opt-in telemetry (or logs to file) and Sentry integration (env controlled),Product/Eng,not started,5,11,Logs are structured; Sentry captures errors when enabled,Extra deps and env vars,src/core/logging_config.py,"Opt-in only; ensure privacy docs and opt-out.",2025-10-13,2025-11-15
21,long,medium,Windows installer + code signing,Create signed Windows installer (MSI or NSIS) and signing workflow (requires certs),Release Team,not started,20,13,Signed installer artifact created and published,PyInstaller + sign steps,dist/,"Requires code signing certificate and secure secret storage.",2025-10-13,2026-01-15
22,long,medium,Telemetry & product metrics,Implement anonymized usage telemetry and dashboard to track feature usage,Product,not started,30,20,Aggregate telemetry (opt-in) and dashboard available,telemetry endpoint and ingestion,docs/telemetry.md,"Comply with privacy regs and provide opt-out.",2025-10-13,2026-02-01
23,long,low,Performance profiling and improvements,Profile audio pipeline and optimize hotspots,Eng,not started,14,20,Improved latency/throughput metrics,benchmarks/,Start with profiling runs and CI performance regression checks,2025-10-13,2026-02-15